name: GitHub Container Registry
on:
    workflow_dispatch:
    push:
        tags:
            - "v*"
        branches:
            - "*"

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    ghcr:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Check version mismatch (tags only)
              if: startsWith(github.ref, 'refs/tags/v')
              run: |
                  # Extract version from package.json
                  PACKAGE_VERSION=$(node -p "require('./package.json').version")
                  
                  # Extract version from git tag (remove 'v' prefix if present)
                  GIT_TAG=${GITHUB_REF#refs/tags/}
                  GIT_VERSION=${GIT_TAG#v}
                  
                  echo "Package.json version: $PACKAGE_VERSION"
                  echo "Git tag version: $GIT_VERSION"
                  
                  # Compare versions
                  if [ "$PACKAGE_VERSION" != "$GIT_VERSION" ]; then
                      echo "❌ Error: Version mismatch!"
                      echo "package.json version ($PACKAGE_VERSION) does not match git tag ($GIT_VERSION)"
                      exit 1
                  fi
                  
                  echo "✅ Versions match!"

            - name: Log in to the Container registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata (tags, labels) for Docker
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  tags: |
                      type=sha,prefix=,suffix=-{{date 'X'}}
                      type=raw,enable=${{ !startsWith(github.ref, 'refs/tags/') }},value=develop
                      type=semver,pattern={{raw}}
            - run: echo "GIT_DATE=$(git log -1 --format=%cd --date=short)" >> $GITHUB_ENV
            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  build-args: |
                    GIT_COMMIT=${{ github.sha }}
                    GIT_REPOSITORY=${{ github.repository }}
                    GIT_DATE=${{ env.GIT_DATE }}